{"version":3,"file":"public-key-pinning.js","sourceRoot":"","sources":["../../src/public-key-pinning.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAE5C,4CAA4C;AAE5C,MAAM,UAAU,mBAAmB,CAAC,YAAsB;IACtD,OAAO,IAAI,OAAO,CAAO,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;QACzC,IAAI,SAAS,CAAC,WAAW,EAAE;YACvB,SAAS,CAAC,WAAW,CAAC,mBAAmB,EAAC,wBAAwB,EAAE,GAAG,EAAE;gBACrE,OAAO,EAAE,CAAC;YACd,CAAC,CAAC,CAAC;SACN;QAED,SAAS,CAAC,OAAO,CAAC,WAAW,CAAC,qBAAqB,CAAC,YAAY,CAAC;aAC5D,IAAI,CAAC,GAAG,EAAE;YACP,iEAAiE;QACrE,CAAC,CAAC;aACD,KAAK,CAAC,GAAG,EAAE;YACR,MAAM,CAAC,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC,CAAC;QAC3D,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,CAAC;AACP,CAAC;AAED,MAAM,UAAU,qBAAqB;IACjC,OAAO,IAAI,OAAO,CAAO,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;QACzC,IAAI,SAAS,CAAC,WAAW,EAAE;YACvB,SAAS,CAAC,WAAW,CAAC,mBAAmB,EAAC,4BAA4B,EAAE,GAAG,EAAE;gBACzE,OAAO,EAAE,CAAC;YACd,CAAC,CAAC,CAAC;SACN;QACD,SAAS,CAAC,OAAO,CAAC,WAAW,CAAC,uBAAuB,EAAE;aAClD,IAAI,CAAC,GAAG,EAAE;YACP,iEAAiE;QACrE,CAAC,CAAC;aACD,KAAK,CAAC,GAAG,EAAE;YACR,MAAM,CAAC,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC,CAAC;QAC7D,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,CAAC;AACP,CAAC","sourcesContent":["import { Capacitor } from '@capacitor/core';\r\n\r\n// let listenerHandle: PluginListenerHandle;\r\n\r\nexport function setPublicKeyPinning(certificates: string[]) {\r\n    return new Promise<void>((resolve, reject) => {\r\n        if (Capacitor.addListener) {\r\n            Capacitor.addListener('com.mmtpkp.plugin','onPinnedCertificateSet', () => {\r\n                resolve();\r\n            });\r\n        }\r\n\r\n        Capacitor.Plugins.Certificate.setPinnedCertificates(certificates)\r\n            .then(() => {\r\n                // Do nothing - the success event will be handled by the listener\r\n            })\r\n            .catch(() => {\r\n                reject(new Error('Failed to set pinned certificates'));\r\n            });\r\n    });\r\n}\r\n\r\nexport function clearPublicKeyPinning() {\r\n    return new Promise<void>((resolve, reject) => {\r\n        if (Capacitor.addListener) {\r\n            Capacitor.addListener('com.mmtpkp.plugin','onPinnedCertificateCleared', () => {\r\n                resolve();\r\n            });\r\n        }\r\n        Capacitor.Plugins.Certificate.clearPinnedCertificates()\r\n            .then(() => {\r\n                // Do nothing - the success event will be handled by the listener\r\n            })\r\n            .catch(() => {\r\n                reject(new Error('Failed to clear pinned certificates'));\r\n            });\r\n    });\r\n}"]}